import java.util.*;
class Pair {
    TreeNode node;
    int position;

    Pair(TreeNode newNode, int newPosition) {
        this.node = newNode;
        this.position = newPosition;
    }
}
public class Solution {
    public static List<Integer> getTopView(TreeNode root) {
        // Write your code here.
        ArrayList<Integer> list = new ArrayList<>();
        if(root == null){
            return list;
        }
        // map store in sorting fashion
        Map<Integer,Integer> map = new TreeMap<>();
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root,0));
        while(!queue.isEmpty()){
            Pair p = queue.remove();
            int pos = p.position;
            TreeNode node = p.node;
            if(map.get(pos)==null){
                map.put(pos,node.data);
            }
            if(node.left!=null){
                queue.add(new Pair(node.left,pos-1));
            }
            if(node.right!=null){
                queue.add(new Pair(node.right,pos+1));
            }
        }
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            list.add(entry.getValue());
        }
        return list;
    }
}
