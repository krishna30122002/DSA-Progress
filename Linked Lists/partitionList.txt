class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode lesser = new ListNode(0);
        ListNode less = lesser;
        ListNode greater = new ListNode(0);
        ListNode great = greater;

        ListNode curr=head;
        while(curr!=null){
            if(curr.val<x){
                less.next=curr;
                less=less.next;
            }else{
                great.next=curr;
                great=great.next;
            }
            curr=curr.next;
        }

        great.next=null;
        less.next=greater.next;

        return lesser.next;
    }
}

// class Solution {
//     public ListNode partition(ListNode head, int x) {
//         ListNode dummy=head;
//         ListNode list=null;
//         while(dummy!=null){
//             if(list==null && dummy.val<x){
//                 list=dummy;
//             }else if(dummy.val<x){
//                 ListNode temp=new ListNode(dummy.val);
//                 list.next=temp;
//                 list=list.next;
//             }
//             dummy=dummy.next;
//         }
//         dummy=head;
//         while(dummy!=null){
//             if(list==null && dummy.val>=x){
//                 list=dummy;
//             }else if(dummy.val>=x){
//                 ListNode temp=new ListNode(dummy.val);
//                 list.next=temp;
//                 list=list.next;
//             }
//             dummy=dummy.next;
//         }
//         return list;
//      }
//  }