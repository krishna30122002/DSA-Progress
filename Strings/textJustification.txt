class Solution {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> result=new ArrayList<>();
        int i=0;
        while(i<words.length){
            int width=words[i].length();
            int j=i+1;

            int candidate=0;
            while(j<words.length && (width+candidate+words[j].length()+1)<=maxWidth){
                width+=words[j].length();
                candidate++;
                j++;
            }
            
            int vacancy=maxWidth-width;

            int atleast=candidate==0 ? 0 : vacancy/candidate;
            int extra=candidate==0 ? 0 : vacancy%candidate;

            if(j==words.length){
                atleast=1;
                extra=0;
            }

            StringBuilder sb = new StringBuilder();
            for(int k=i; k<j; k++){
                sb.append(words[k]);
                if(k==j-1){
                    break;
                }
                for(int e=0; e<atleast; e++){
                    sb.append(" ");
                }
                if(extra>0){
                    sb.append(" ");
                    extra--;
                }
            }
            while(sb.length()<maxWidth){
                sb.append(" ");
            }
            result.add(sb.toString());
            i=j;
        }
        return result;
    }
}