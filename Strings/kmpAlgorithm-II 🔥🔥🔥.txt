// Search Pattern (KMP - Algorithm) and Return a list

import java.util.*;
public class Solution {
    public static void solve(String pattern, int[] lps){
        int j=0;
        int i=1;

        while(i<pattern.length()) {
            if(pattern.charAt(i)==pattern.charAt(j)){
                j++;
                lps[i]=j;
                i++;
            }
            else{
                if(j!=0) {
                    j=lps[j-1];
                }else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }
    public static List< Integer > stringMatch(String text, String pattern) {
        // Write your code here.
        List<Integer> list = new ArrayList<>();
        // if(pattern.length()>text.length()){
        //     return -1;
        // }
        int[] lps=new int[pattern.length()];
        solve(pattern,lps);

        int i=0,j=0;
        while(i<text.length()){
            if(text.charAt(i)==pattern.charAt(j)){
                i++;
                j++;
                if(j==pattern.length()){
                    list.add(i-j+1);
                    j=lps[j-1];
                }
            }else{
                if(j>0){
                    j=lps[j-1];
                }else{
                    i++;
                }
            }
        }
        return list;
    }
}