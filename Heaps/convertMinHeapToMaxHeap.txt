public class Solution {
    public static void heapify(int[] arr, int i, int n){
        int left=(2*i)+1;
        int right=(2*i)+2;
        int largest = i;
        if(left<n && arr[left]>arr[largest]){
            largest=left;
        }
        if(right<n && arr[right]>arr[largest]){
            largest=right;
        }
        if(largest!=i){
            swap(arr,i,largest);
            heapify(arr,largest,n);
        }
    }
    public static void swap(int[] arr, int i, int j){
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
        return;
    }
    public static int[] MinToMaxHeap(int n, int[] arr){
        // Write your code here
        for(int i = (n/2)-1; i>=0; i--){
            heapify(arr,i,n);
        }
        int[] result=new int[n];
        for(int i=0;i<n; i++){
            result[i]=arr[i];
        }
        return result;
    }
}