class Solution {

    public boolean solve(int i, int j, int n, int m, char[][] board, String word, int k){
        if(k==word.length()){
            return true;
        }
        if(i<0 || j<0 || i==n || j==m || board[i][j]!=word.charAt(k)){
            return false;
        }
        char ch = board[i][j];
        board[i][j]='X';

        boolean out1=solve(i+1,j,n,m,board, word, k+1);
        boolean out2=solve(i,j+1,n,m,board, word, k+1);
        boolean out3=solve(i-1,j,n,m,board, word, k+1);
        boolean out4=solve(i,j-1,n,m,board, word, k+1);

        board[i][j]=ch;

        return (out1 || out2 || out3 || out4);
    }

    public boolean exist(char[][] board, String word) {
        int n = board.length;
        int m = board[0].length;
        for(int i = 0; i<n; i++){
            for(int j = 0; j<m; j++){
                if(board[i][j]==word.charAt(0)){
                    if(solve(i,j,n,m,board,word,0)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
}