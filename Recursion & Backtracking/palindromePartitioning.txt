class Solution {

    public void solve(int idx, String s, List<String> res,   List<List<String>> list){
        if(idx==s.length()){
            list.add(new ArrayList<>(res));
            return;
        }
        for(int i = idx; i<s.length(); ++i){
            if(isPalindrome(s, idx, i)){
                res.add(s.substring(idx,i+1));
                solve(i+1, s, res, list);
                res.remove(res.size()-1);
            }
        }
    }

    public boolean isPalindrome(String str, int start, int end){
        while(start<=end){
            if(str.charAt(start)!=str.charAt(end)){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }

    public List<List<String>> partition(String s) {
        List<List<String>> list = new ArrayList<>();
        List<String> res = new ArrayList<>();
        solve(0, s, res, list);
        return list;
    }
}