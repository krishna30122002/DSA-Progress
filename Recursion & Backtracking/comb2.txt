class Solution {
    void solve(int ind, int[] arr, List<List<Integer>> list, List<Integer> res, int n) {
        if (n == 0) {
            list.add(new ArrayList<>(res));
            return;
        }
        for (int i = ind; i < arr.length; i++) {
           
            if (i > ind && arr[i] == arr[i - 1]) {
                continue;
            }
            if (arr[i] > n) {
                break;
            }
            res.add(arr[i]);
            solve(i + 1, arr, list, res, n - arr[i]);
            res.remove(res.size() - 1);
        }
    }

    public List<List<Integer>> combinationSum2(int[] arr, int target) {
        Arrays.sort(arr);
         List<List<Integer>> list = new ArrayList<>();
        List<Integer> res = new ArrayList<>();
        solve(0,arr,list,res,target);
        return list;
    }
}