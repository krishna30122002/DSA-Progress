// Sum of Left Leaves

// class Solution {
// public void solve(TreeNode root, int[] a){
// if(root==null){
// return;
// }
// if(root.left!=null && root.left.left==null && root.left.right==null){
// a[0]+=root.left.val;
// }
// solve(root.left,a);
// solve(root.right,a);
// }
// public int sumOfLeftLeaves(TreeNode root) {
// int[] a=new int[1];
// a[0]=0;
// solve(root,a);
// return a[0];
// }
// }

class Solution {
     int sum = 0;

    void solve(TreeNode node, boolean isLeft) {
        if (node.left == null && node.right == null && isLeft) {
            sum += node.val;
        }
        if (node.left != null) {
            solve(node.left, true);
        }
        if (node.right != null) {
            solve(node.right, false);
        }
    }

    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null || (root.left == null && root.right == null))
            return 0;
        solve(root, false);
        return sum;
    }
}