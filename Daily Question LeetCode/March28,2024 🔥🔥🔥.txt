// Length of Longest Subarray With at Most K Frequency

class Solution {
    public int maxSubarrayLength(int[] nums, int k) {
        int res = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        int i = 0;

        for (int j = 0; j < nums.length; j++) {
            map.put(nums[j], map.getOrDefault(nums[j], 0) + 1);
            while (map.get(nums[j]) > k) {
                map.put(nums[i], map.get(nums[i]) - 1);
                i++;
            }
            res = Math.max(res, j-i+1);
        }

        return res;
    }
}