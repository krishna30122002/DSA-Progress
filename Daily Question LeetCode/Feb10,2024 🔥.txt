// Palindromic Substrings

class Solution {
    public int countSubstrings(String s) {
        int n=s.length();
        int cnt=0;

        for(int i=0; i<(2*n)-1; i++){
            int left=i/2;
            int right=left+(i%2);
            
            while (left >= 0 && right < n && s.charAt(left) == s.charAt(right)) {
                cnt++;
                left--;
                right++;
            }
        }
        return cnt;
    }
}

// class Solution {
//     public boolean solve(String s, int i, int j){
//         while(i<j){
//             if(s.charAt(i)!=s.charAt(j)){
//                 return false;
//             }
//             i++;
//             j--;
//         }
//         return true;
//     }
//     public int countSubstrings(String s) {
//         int n=s.length();
//         int cnt=n;
//         for(int i=0; i<n; i++){
//             for(int j=i+1; j<n; j++){
//                 if(solve(s,i,j)){
//                     cnt++;
//                 }
//             }
//         }
//         return cnt;
//     }
// }