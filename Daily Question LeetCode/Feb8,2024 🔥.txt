// Perfect Squares

// class Solution {
//     public int solve(int x){
//         if(x<0){
//             return Integer.MAX_VALUE;
//         }
//         if(x==0){
//             return 0;
//         }
//         int res = Integer.MAX_VALUE;
//         for(int i=1; (int)(Math.pow(i,2))<=x; i++){
//             res=Math.min(res,1+solve(x-(i*i)));
//         }
//         return res;
//     }
//     public int numSquares(int n) {
//         return solve(n);
//     }
// }

// BOTTOM UP DP

class Solution{
    public int numSquares(int n) {
        int[] dp = new int[n+1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0]=0;
        for(int i=1; i<=n; i++){
            for(int j=1; (j*j)<=i; j++){
                dp[i]=Math.min(dp[i], 1+dp[i-(j*j)]);
            }
        }
        return dp[n];
    }
}