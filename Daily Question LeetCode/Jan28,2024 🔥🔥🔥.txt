// Number of Submatrices That Sum to Target

// PRETTY HARD

class Solution {
    public int numSubmatrixSumTarget(int[][] matrix, int target) {
        int m=matrix.length;
        int n=matrix[0].length;
        for(int row=0; row<m; row++){
            for(int col=1; col<n; col++){
                matrix[row][col]+=matrix[row][col-1];
            }
        }
        int cnt=0;
        for(int col1=0; col1<n; col1++){
            for(int col2=col1; col2<n; col2++){
                Map<Integer,Integer> map=new HashMap<>();
                map.put(0,1);
                int sum=0;

                for(int row=0; row<m; row++){
                    sum+=matrix[row][col2]-((col1>0)?matrix[row][col1-1]:0);
                    cnt+=map.getOrDefault(sum-target,0);
                    map.put(sum,map.getOrDefault(sum,0)+1);
                }
            }
        }
        return cnt;
    }
}