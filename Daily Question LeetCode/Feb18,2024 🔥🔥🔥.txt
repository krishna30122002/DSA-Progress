//Meeting Rooms III

class Solution {
    public int mostBooked(int n, int[][] meetings) {
        int[] list=new int[n];
        long[] temp=new long[n];

        Arrays.sort(meetings, Comparator.comparingInt(a -> a[0]));
        
        for(int i=0; i<meetings.length; i++){
            int start=meetings[i][0];
            int end=meetings[i][1];
            int minIdx=-1;
            long val=Long.MAX_VALUE;
            boolean flag=false;

            for(int j=0; j<n; j++){
                if(temp[j]<val){
                    val=temp[j];
                    minIdx=j;
                }
                if(temp[j]<=start){
                    flag=true;
                    list[j]++;
                    temp[j]=end;
                    break;
                }
            }
            if(!flag){
                list[minIdx]++;
                temp[minIdx]+=(long)(end-start);
            }
        }
        int maxi=-1;
        int idx=-1;
        
        for(int i=0; i<n; i++){
            if(list[i]>maxi){
                maxi=(int)list[i];
                idx=(int)i;
            }
        }
        return idx;
    }
}