// Subarrays with K Different Integers

class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        int subWithMax = solve(nums, k);
        int reducedSubWithMax = solve(nums, k - 1);
        return subWithMax - reducedSubWithMax;
    }
    
    public int solve(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int i = 0, j = 0, ans = 0;
        
        while (j < nums.length) {
            map.put(nums[j], map.getOrDefault(nums[j], 0) + 1);
            
            while (map.size() > k) {
                map.put(nums[i], map.get(nums[i]) - 1);
                if (map.get(nums[i]) == 0) {
                    map.remove(nums[i]);
                }
                i++;
            }
            
            ans += j - i + 1; 
            j++;
        }
        
        return ans;
    }
}