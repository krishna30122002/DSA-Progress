// Applying BFS Traversal of Graphs

class Solution {
    public int minMutation(String start, String end, String[] bank) {
        int cnt=0;
        HashSet<String> visited=new HashSet<>();
        HashSet<String> bankSet=new HashSet<>();
        Queue<String> q=new LinkedList<>();
        q.offer(start);
        for(String s:bank){
            bankSet.add(s);
        }
        visited.add(start);

        while(!q.isEmpty()){
            int n=q.size();
            while(n-->0){
                String current=q.poll();
                if(current.equals(end)){
                    return cnt;
                }
                for(char ch:("ACTG").toCharArray()){
                    for(int i=0; i<current.length(); i++){

                        String str=current.substring(0, i)+ch+current.substring(i + 1);

                        if(!visited.contains(str) && bankSet.contains(str)){
                            visited.add(str);
                            q.offer(str);
                        }
                    }
                }
            }
            cnt++;
        }
        return -1;
    }
}