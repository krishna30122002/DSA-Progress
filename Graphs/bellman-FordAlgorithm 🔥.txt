// User function Template for Java

/*
*   edges: vector of vectors which represents the graph
*   S: source vertex to start traversing graph with
*   V: number of vertices
*/
class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        // Write your code here
        int[] dist=new int[V];
        Arrays.fill(dist, (int)1e8);
        dist[S]=0;
        
        for(int i=0; i<V-1; i++){
            for(ArrayList<Integer> l:edges){
                int u=l.get(0);
                int v=l.get(1);
                int wt=l.get(2);
                
                if(dist[u]!=1e8 && dist[u]+wt<dist[v]){
                    dist[v]=wt+dist[u];
                }
            }
        }
        for(ArrayList<Integer> l:edges){
                int u=l.get(0);
                int v=l.get(1);
                int wt=l.get(2);
                
                if(dist[u]!=1e8 && dist[u]+wt<dist[v]){
                    return new int[]{-1};
                }
            }
        return dist;
    }
}