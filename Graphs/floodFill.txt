class Solution {
    public void dfs(int n, int m, int row, int col, int initialColor, int[][] image, int[][] copy, int[] delRow, int[] delCol, int newColor){
        copy[row][col]=newColor;
        for(int i=0; i<4; i++){
            int nRow=row+delRow[i];
            int nCol=col+delCol[i];

            if(nRow>=0 && nRow<n && nCol>=0 && nCol<m && image[nRow][nCol]==initialColor && copy[nRow][nCol]!=newColor){
                dfs(n,m,nRow,nCol,initialColor,image,copy,delRow,delCol,newColor);
            }
        }
    }
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        int[][] copy = image;
        int initialColor = image[sr][sc];
        int n=image.length;
        int m=image[0].length;
        
        int[] delRow={-1,0,+1,0};
        int[] delCol={0,+1,0,-1};

        dfs(n, m, sr, sc, initialColor, image, copy, delRow, delCol, newColor);
        return copy;
    }
}