class Solution {
    public boolean solve(int[] nums, int mid, int k){
        int cnt=1;
        long sum=0;
        int n=nums.length;
        for(int i=0; i<n; i++){
            if((sum+nums[i])<=mid){
                sum+=nums[i];
            }else{
                cnt++;
                sum=nums[i];
            }
        }
        if(cnt>k){
            return true;
        }
        return false;
    }
    public int splitArray(int[] nums, int k) {
        int n=nums.length;
        int low=nums[0];
        int high=0;
        for(int i=0; i<n; i++){
            low=Math.max(low, nums[i]);
            high+=nums[i];
        }
        while(low<=high){
            int mid=low+(high-low)/2;
            if(solve(nums, mid, k)){
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        return low;
    }
}