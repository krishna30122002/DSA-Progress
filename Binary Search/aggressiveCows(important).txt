class Solution {
    public boolean solve(int[] position, int mid, int m){
        int n=position.length;
        int cnt=1; // always 1 cow at 0th index
        int last=position[0]; // first cow always at 0th index i.e last for others
        for(int i=1; i<n; i++){
            if(position[i]-last>=mid){
                cnt++;
                last=position[i];
            }
        }
        if(cnt>=m){
            return true;
        }
        return false;
    }
    public int maxDistance(int[] position, int m) {
        // range = [1, (max-min)]
        Arrays.sort(position);
        int n=position.length;
        int low=1;
        int high=position[n-1]-position[0];
        int ans=0;

        while(low<=high){
            int mid=low+(high-low)/2;
            if(solve(position, mid, m)){
                ans=mid;
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        return ans;
    }
}