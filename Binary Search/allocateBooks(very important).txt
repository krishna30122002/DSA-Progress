// very important

// return low not mid

import java.util.ArrayList;
public class Solution {
    public static boolean solve(ArrayList<Integer> arr, int mid, int m){
        int n=arr.size();
        int studentCnt=1;
        long pages=0;
        for(int i=0; i<n; i++){
            if(pages+arr.get(i)<=mid){
                pages+=arr.get(i);
            }else{
                studentCnt++;
                pages=arr.get(i);
            }
        }
        if(studentCnt>m){
            return true;
        }
        return false;
    }
    public static int findPages(ArrayList<Integer> arr, int n, int m) {
        // Write your code here.
        if(m>n){
            return -1;
        }
        int low=arr.get(0);
        int high=0;
        for(int num:arr){
            low=Math.max(low,num);
            high+=num;
        }
        while(low<=high){
            int mid=low+(high-low)/2;
            if(solve(arr,mid,m)){
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        return low;
    }
}