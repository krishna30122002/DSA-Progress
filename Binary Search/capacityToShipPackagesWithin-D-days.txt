class Solution {
    public boolean solve(int[] weights, int mid, int days){
        int n=weights.length;
        int day=1;
        int load=0;
        for(int i=0; i<n; i++){
            if(load+weights[i]>mid){
                day+=1;
                load=weights[i];
            }else{
                load+=weights[i];
            }
        }   
        if(day<=days){
            return true;
        }
        return false;
    }
    public int shipWithinDays(int[] weights, int days) {
        int n=weights.length;
        int low=Integer.MIN_VALUE;

        // Range -> [maxi, sum];

        int high=0;
        for(int i=0; i<n; i++){
            low=Math.max(low, weights[i]);
            high+=weights[i];
        }

        int ans=0;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(solve(weights, mid, days)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
}