class Solution {
    public boolean solve(int[] nums, int mid, int threshold){
        int n=nums.length;
        int cnt=0;
        for(int i=0; i<n; i++){
            cnt+=Math.ceil((double)(nums[i])/(double)(mid));
        }
        if(cnt<=threshold){
            return true;
        }
        return false;
    }
    public int smallestDivisor(int[] nums, int threshold) {
        int n=nums.length;
        // int low=Integer.MAX_VALUE;
        int low=1; // smallest divisor possible
        int high=Integer.MIN_VALUE;
        int ans=0;
        for(int i=0; i<n; i++){
            high=Math.max(high, nums[i]);
        }
        while(low<=high){
            int mid=low+(high-low)/2;
            if(solve(nums, mid, threshold)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
}