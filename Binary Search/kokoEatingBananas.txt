class Solution {
    public int solve(int[] arr, int mid){
        int n=arr.length;
        int cnt=0;
        for(int i=0; i<n; i++) {
            cnt+=Math.ceil((double)(arr[i])/(double)(mid));
        }
        return cnt;
    }
    public int minEatingSpeed(int[] piles, int h) {
        int n=piles.length;
        int maxi=Integer.MIN_VALUE;
        for(int i=0; i<n; i++){
            maxi=Math.max(maxi, piles[i]);
        }
        int low=1;
        int high=maxi;
        int ans=Integer.MAX_VALUE;
        while(low<=high){
            int mid=low+(high-low)/2;
            int totalHrs=solve(piles,mid);
            if(totalHrs<=h){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }
}