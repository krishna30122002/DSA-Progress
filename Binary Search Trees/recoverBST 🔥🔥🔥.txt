class Solution {
    private TreeNode prev;
    private TreeNode first;
    private TreeNode between;
    private TreeNode last;
    private void solve(TreeNode root){
        if(root==null){
            return;
        }
        solve(root.left);
        if(prev!=null && (root.val<prev.val)){
            if(first==null){
                first=prev;
                between=root;
            }else{
                last=root;
            }
        }
        prev=root;
        solve(root.right);
        return;
    }
    public void recoverTree(TreeNode root) {
        first=between=last=null;
        prev=new TreeNode(Integer.MIN_VALUE);
        solve(root);
        if(first!=null && last!=null){
            int temp=first.val;
            first.val=last.val;
            last.val=temp;
        }else if(first!=null && between!=null){
            int temp=first.val;
            first.val=between.val;
            between.val=temp;
        }
        return;
    }
}