class Solution {
    public int solve(int idx, int[] arr, int[][] dp, int target){
        if(idx==0){
            if(target % arr[idx] == 0){
                return 1;
            }else{
                return 0;
            }
        }
        if(dp[idx][target]!=-1){
            return dp[idx][target];
        }
        int notTake = solve(idx-1, arr, dp, target);
        int take = 0;
        if(arr[idx]<=target){
            take = solve(idx, arr, dp, target-arr[idx]);
        }
        dp[idx][target]=(take + notTake);
        return dp[idx][target];
    }
    public int change(int amount, int[] coins) {
        int n = coins.length;

        int[][] dp = new int[n][amount+1];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return solve(n-1, coins, dp, amount);
    }
}