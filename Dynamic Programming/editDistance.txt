class Solution {
    public int solve(int idx1, int idx2, String s1, String s2, int[][] dp){
        if(idx1<0){
            return idx2+1;
        }
        if(idx2<0){
            return idx1+1;
        }
        if(dp[idx1][idx2]!=-1){
            return dp[idx1][idx2];
        }
        if(s1.charAt(idx1)==s2.charAt(idx2)){
            dp[idx1][idx2] = solve(idx1-1, idx2-1, s1, s2, dp);
        }else{
            dp[idx1][idx2] = Math.min((1+solve(idx1-1, idx2-1, s1, s2, dp)),Math.min((1+solve(idx1, idx2-1, s1, s2, dp)), (1+solve(idx1-1, idx2, s1, s2, dp))));
        }
        return dp[idx1][idx2];
    }
    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        int[][] dp = new int[n][m];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return solve(n-1,m-1,word1,word2,dp);
    }
}