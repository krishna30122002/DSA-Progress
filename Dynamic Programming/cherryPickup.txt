// C++ Solution

// Must Revisit

#include <bits/stdc++.h> 
int solve(int i, int j1, int j2, int m, int n, vector<vector<int>> &arr, vector<vector<vector<int>>> &dp){
    if(j1<0 || j1>=n || j2<0 || j2>=n){
        return -1e9;
    }
    if( i == m-1 ){
        if(j1==j2){
            return arr[i][j1];
        }else{
            return arr[i][j1]+arr[i][j2];
        }
    }

    if(dp[i][j1][j2]!=-1){
        return dp[i][j1][j2];
    }

    int maxi = -1e8;
    for(int dj1=-1; dj1<=1; dj1++){
        for(int dj2=-1; dj2<=1; dj2++){
            int value = 0;
            if(j1==j2){
                value=arr[i][j1];
            }else{
                value=arr[i][j1]+arr[i][j2];
            }
            value+=solve(i+1, j1+dj1, j2+dj2, m, n, arr, dp);
            maxi = max(maxi,value);
        }
    }
    dp[i][j1][j2]=maxi;
    
    return dp[i][j1][j2];
}

int maximumChocolates(int r, int c, vector<vector<int>> &arr) {
    // Write your code here.
    vector<vector<vector<int>>> dp(r, vector<vector<int>>(c, vector<int>(c,-1)));
    return solve(0, 0, c-1, r, c, arr, dp);
}