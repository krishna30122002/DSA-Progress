class Solution {
    public static int solve(List<List<Integer>> arr, int[][] dp, int n){
        for(int i = 0; i<n; i++){
            dp[n-1][i]=arr.get(n-1).get(i);
        }
        for(int i = n-2; i>=0; i--){
            for(int j = i; j>=0; j--){

                if(dp[i][j]!=-1){
                    return dp[i][j];
                }

                int down = arr.get(i).get(j)+dp[i+1][j];
                int downDiag = arr.get(i).get(j)+dp[i+1][j+1];
                dp[i][j] = Math.min(down, downDiag);
            }
        }
        return dp[0][0];
    }
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
        int[][] dp = new int[n][n];
        for(int[] row:dp){
            Arrays.fill(row, -1);
        }
        return solve(triangle, dp, n);
    }
}