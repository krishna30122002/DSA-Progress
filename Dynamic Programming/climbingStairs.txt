class Solution {
    public int climbStairs(int n) {
       int[] arr=new int[n+1];
        arr[0]=1;
        arr[1]=1;
        for(int i=2;i<=n;i++){
            arr[i]=arr[i-1]+arr[i-2];
        }
        return arr[n];
    }
}

/*
class Solution {
    public int solve(int idx, int[] dp){
        if(idx==0){
            return 1;
        }
        if(idx==1){
            return 1;
        }
        if(dp[idx]!=-1){
            return dp[idx];
        }
        int left = solve(idx-1,dp);
        int right = solve(idx-2,dp);
        dp[idx]=left+right;
        return dp[idx];
    }
    public int climbStairs(int n) {
       int[] dp = new int[n+1];
       Arrays.fill(dp,-1);
       return solve(n,dp);
    }
}
*/